<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>前端基础面试题</title>
      <link href="/2020/09/14/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
      <url>/2020/09/14/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E9%9D%A2%E8%AF%95%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h4 id="HTML篇"><a href="#HTML篇" class="headerlink" title="HTML篇"></a>HTML篇</h4><h5 id="1-Doctype作用，HTML5为什么只需要写"><a href="#1-Doctype作用，HTML5为什么只需要写" class="headerlink" title="1.Doctype作用，HTML5为什么只需要写"></a>1.Doctype作用，HTML5为什么只需要写<!DOCTYPE HTML></h5><p>doctype是一种标准通用标记语言的文档类型声明，目的是告诉标准通用标记语言解析器要使用什么样的文档类型定义DTD来解析文档&lt;!DOCTYPE&gt;声明必须是HTML文档的第一行，位于html标签之前HTML5不基于SGML，所以不需要引用DTD。在HTML5中&lt;!DOCTYPE&gt;只有一种SGML：标准通用标记语言，是现时常用的超文本格式的最高层次标准</p><h5 id="2-行内元素有哪些，块级元素有哪些，空-void-元素有哪些"><a href="#2-行内元素有哪些，块级元素有哪些，空-void-元素有哪些" class="headerlink" title="2.行内元素有哪些，块级元素有哪些，空(void)元素有哪些"></a>2.行内元素有哪些，块级元素有哪些，空(void)元素有哪些</h5><p>行内元素：a span i img input select b 等等<br>块级元素：div ul li ol h1-h6 p table 等等<br>空(void)元素：hr br link等等</p><h5 id="3-简述一下你对HTML语义化的理解"><a href="#3-简述一下你对HTML语义化的理解" class="headerlink" title="3.简述一下你对HTML语义化的理解"></a>3.简述一下你对HTML语义化的理解</h5><p>简单来说，就是合适的标签做合适的事情，这样具有以下好处：<br>有助于构建良好的HTML结构；有利于搜索引擎的建立索引、抓取，利于SEO；有利于不同设备的解析；有利于构建清晰的机构，有利于团队的开发、维护</p><h5 id="4-常见的浏览器内核有哪些，介绍一下你对浏览器内核的理解"><a href="#4-常见的浏览器内核有哪些，介绍一下你对浏览器内核的理解" class="headerlink" title="4.常见的浏览器内核有哪些，介绍一下你对浏览器内核的理解"></a>4.常见的浏览器内核有哪些，介绍一下你对浏览器内核的理解</h5><p>Trident内核：IEGecko内核：NETSCAPE6及以上版本，火狐<br>Presto内核：Oprea7及以上。【Opera内核原为Presto,现为Blink;】<br>Webkit内核：Safari，Chrome等。【Chrome的Blink(Webkit的分支)】<br>浏览器内核又可以分成两部分：渲染引擎和JS引擎。渲染引擎主要负责取得网页的内容、整理讯息、计算网页的显示方式等，JS引擎则是解析JavaScript语言，执行JavaScript语言来实现网页的动态效果。</p><h5 id="5-html5有哪些新特性"><a href="#5-html5有哪些新特性" class="headerlink" title="5.html5有哪些新特性"></a>5.html5有哪些新特性</h5><p>(1)语义化标签：hearder、footer、nav、section、article、aside等<br>(2)增强型表单：<br>date(从一个日期选择器选择一个日期) email(包含e-mail地址的输入域) number(数值的输入域) range(一定范围内数字值的输入域) search(用于搜索域) tel(定义输入电话号码字段)等<br>(3)视频和音频：audio video<br>(4)Canvas绘图 SVG绘图<br>(5)地理定位：Geolocation<br>(6)拖放API：drag<br>(7)web worker：是运行在后台的JavaScript，独立于其他脚本，不会影响页面的性能<br>(8)web storage：localStorage sessionStorage<br>(9)WebSocker:HTML5开始提供的一种在单个TCP连接上进行全双工通讯的协议</p><h5 id="6-描述一下cookie，sessionStorage和localStorage的区别"><a href="#6-描述一下cookie，sessionStorage和localStorage的区别" class="headerlink" title="6.描述一下cookie，sessionStorage和localStorage的区别"></a>6.描述一下cookie，sessionStorage和localStorage的区别</h5><p>(1)localStorage长期存储数据，浏览器关闭后，数据不丢失<br>(2)sessionStorage数据在浏览器关闭后自动删除<br>(3)cookie是网站为了标识用户身份而存储在用户本地终端（Client Side）上的数据（通常经过加密）。cookie始终在同源的http请求中携带（即使不需要）都会在浏览器和服务器端间来回传递。sessionStorage和localStorage不会自动把数据发给服务器，仅在本地保存；<br>(4)存储大小：cookie数据大小不会超过4K，sessionStorage和localStorage虽然也有存储大小的限制，但比cookie大得多，可以达到5M或者更多<br>(5)有效时间：localStorage存储持久数据，浏览器关闭后数据不丢失，除非自动删除数据。sessionStorage数据在当前浏览器窗口关闭后自动删除。cookie设置的cookie过期时间之前一直有效，即使窗口或者浏览器关闭</p><h5 id="7-如何实现浏览器内多个标签页之间的通信"><a href="#7-如何实现浏览器内多个标签页之间的通信" class="headerlink" title="7.如何实现浏览器内多个标签页之间的通信"></a>7.如何实现浏览器内多个标签页之间的通信</h5><p>使用localStorage：localStorage.setItem(key.value)、localStorage.getItem(key)、websocket协议<br>webworker</p><h5 id="8-HTML5的离线存储怎么使用，解释一下工作原理"><a href="#8-HTML5的离线存储怎么使用，解释一下工作原理" class="headerlink" title="8.HTML5的离线存储怎么使用，解释一下工作原理"></a>8.HTML5的离线存储怎么使用，解释一下工作原理</h5><h5 id="9-src与href的区别"><a href="#9-src与href的区别" class="headerlink" title="9.src与href的区别"></a>9.src与href的区别</h5><p>区别：src用于替代这个元素，而href用于建立这个标签与外部资源之间的关系<br><code>&lt;link href=&quot;style.css&quot; rel=&quot;stylesheet&quot;&gt;</code>浏览器加载到这里的时候，html的渲染和解析不会暂停，css文件的加载是同时进行的<br><code>&lt;script src=&quot;script.js&quot;&gt;&lt;/script&gt;</code>当浏览器解析到这句代码时，页面的加载和解析都会暂停直到浏览器拿到并执行完这个js文件</p><h5 id="10-表单提交中Get和Post方式的区别"><a href="#10-表单提交中Get和Post方式的区别" class="headerlink" title="10.表单提交中Get和Post方式的区别"></a>10.表单提交中Get和Post方式的区别</h5><p>Get一般用于从服务器上获取数据，Post向服务器传送数据<br>Get传输的数据是拼接在Url之后的，对用户是可见的；Post的传输数据对用户是不可见的<br>Get传送的数据量较小，不能大于2KB。Post传送的数据量较大，一般被默认为不受限制<br>Get安全性非常低，Post安全性较高<br>在Form提交的时候，如果不指定method，则默认为get请求</p><h4 id="CSS篇"><a href="#CSS篇" class="headerlink" title="CSS篇"></a>CSS篇</h4><h5 id="1-css盒子模型，box-sizing属性的理解"><a href="#1-css盒子模型，box-sizing属性的理解" class="headerlink" title="1.css盒子模型，box-sizing属性的理解"></a>1.css盒子模型，box-sizing属性的理解</h5><p>css的盒模型由conten(内容)、padding(内边距)、border(边框)、margin(外边距)组成。但盒子的大小由content+padding+border这几部分决定<br>box-sizing是一个css3属性，与盒子模型有着密切联系。即决定元素的宽高如何计算，box-sizing有三个属性：<br>box-sizing：content-box| border-box | inherit;<br>content-box：使得元素的宽高即为内容区的宽高（默认模式）<br>border-box：计算方式content + padding + border = 元素本身大小，即缩小了content大小<br>inherit：指定box-sizing属性的值，应该从父元素继承</p><h5 id="2-清除浮动"><a href="#2-清除浮动" class="headerlink" title="2.清除浮动"></a>2.清除浮动</h5><p>浮动的元素是脱离文档标准流的，如果我们不清除浮动，那么就会造成父元素高度塌陷，影响页面布局。<br>清除浮动的方式：<br>(1)为父元素设置高度<br>(2)为父元素添加overflow:hidden</p><blockquote><p>overflow:hidden可以触发BFC机制<br>BFC：块级格式化上下文，创建了BFC的元素就是一个独立的盒子，它规定了内部如何布局，并且与这个独立盒子里的布局不受外部影响，当然它也不会影响到外面的元素，计算BFC的高度时，浮动元素也参与计算</p></blockquote><p>(3)伪元素</p><pre><code>.fix::after{    content:&quot;&quot;;    display:block;    clear:both;}</code></pre><p>使用伪元素的好处：不增加冗余的DOM节点，符合语义化</p><h5 id="3-如何让一个不定宽高的盒子水平垂直居中"><a href="#3-如何让一个不定宽高的盒子水平垂直居中" class="headerlink" title="3.如何让一个不定宽高的盒子水平垂直居中"></a>3.如何让一个不定宽高的盒子水平垂直居中</h5><p>(1)position=absolute,lrtb=0,margin=auto,包含块一定是容器。（原理：绝对定位盒模型的特性）<br>left+right+width+padding+margin = 包含块的宽度<br>top+bottom+height+padding+margin = 包含块的高度<br>(2)position=absolute,lt=50%,包含块一定是容器，margin-top/margin-left为负的自身的一半<br>(3)position=absolute,lt=50%,包含块一定是容器，transform:translate(-50%,-50%)<br>(4)flex</p><h5 id="4-px、em和rem的区别"><a href="#4-px、em和rem的区别" class="headerlink" title="4.px、em和rem的区别"></a>4.px、em和rem的区别</h5><p>px：像素，相对长度单位。像素px是相对于显示器屏幕分辨率而言的<br>em的值并不是固定的，会继承父级元素的字体大小，代表倍数<br>rem的值并不是固定的，始终是基于根元素<code>&lt;html&gt;</code>的，也代表倍数</p><h5 id="5-position的值有哪些"><a href="#5-position的值有哪些" class="headerlink" title="5.position的值有哪些"></a>5.position的值有哪些</h5><p>static：默认值。没有定位，元素出现在正常的文档流中<br>relative：相对定位，相对于其正常位置进行定位<br>absolute：绝对定位，相对于static定位以外的第一个父元素进行定位<br>fixed：固定定位，相对于浏览器窗口进行定位</p><h5 id="6-display-none与visibility-hidden的区别"><a href="#6-display-none与visibility-hidden的区别" class="headerlink" title="6.display:none与visibility:hidden的区别"></a>6.display:none与visibility:hidden的区别</h5><p>区别display:none与visibility:hidden的是：一个占据空间，一个不占据任何空间，在文档渲染时，该元素如同不存在(但依然存在文档对象模型树中)，该元素空间依旧存在是否渲染会触发reflow(回流)，进行渲染只会触发repaint(重绘)，因为没有发现位置变化，不进行渲染；是否是继承属性，元素及其子元素都会消失是继承属性，若子元素使用了visibility:visible，则不继承，这个子孙元素又会显现出</p><h5 id="7-CSS中link和-import的区别"><a href="#7-CSS中link和-import的区别" class="headerlink" title="7.CSS中link和@import的区别"></a>7.CSS中link和@import的区别</h5><p>link属于XHTML标签，@import完全是CSS提供的一种方式，只能加载CSS；<br>(1)CSS加载顺序的差别，当一个页面被加载的时候，link引用的CSS会同时被加载，而@import引用的CSS会等到页面全部被下载完再被加载<br>(2)兼容性的差别：由于@import是CSS2.1提出的，所以老的浏览器不支持，而link标签无此问题，当使用JavaScript控制dom去改变样式的时候，只能使用link标签，因为@import不是dom可以控制的</p><h5 id="8-什么是响应式设计，响应式设计的基本原理是什么"><a href="#8-什么是响应式设计，响应式设计的基本原理是什么" class="headerlink" title="8.什么是响应式设计，响应式设计的基本原理是什么"></a>8.什么是响应式设计，响应式设计的基本原理是什么</h5><p>响应式网站设计是一个网站能够兼容多个终端，而不是为每一个终端做一个特定的版本。基本原理是通过媒体查询，检测不同的设备屏幕尺寸做处理</p><h5 id="9-为什么要初始化CSS样式"><a href="#9-为什么要初始化CSS样式" class="headerlink" title="9.为什么要初始化CSS样式"></a>9.为什么要初始化CSS样式</h5><p>因为浏览器的兼容问题，不同浏览器对有些标签的默认值是不同的，如果没对CSS初始化往往会出现浏览器之间的页面显示差异，初始化样式会对SEO有一定的影响</p><h5 id="10-CSS3有哪些新特性"><a href="#10-CSS3有哪些新特性" class="headerlink" title="10.CSS3有哪些新特性"></a>10.CSS3有哪些新特性</h5><p>(1)实现圆角border-radius，阴影box-shadow，边框图片border-image<br>(2)对文字加特效text-shadow，强制文本换行word-wrap，线性渐变linear-gradient<br>(3)实现旋转transform:rotate(90deg)，缩放scale(0.85,0.90)，translate(0px,-30px)定位，倾斜skew(-9deg,0deg)<br>(4)增加了更多的CSS选择器、多背景、rgba()<br>(5)唯一引入的伪元素是 ::selection<br>(6)实现媒体查询@media，多栏布局flex<br>(7)过渡 transiton 动画animation</p><h5 id="11-before和-after中双冒号和单冒号有什么区别？"><a href="#11-before和-after中双冒号和单冒号有什么区别？" class="headerlink" title="11.::before和:after中双冒号和单冒号有什么区别？"></a>11.::before和:after中双冒号和单冒号有什么区别？</h5><p>单冒号(:)用于CSS3伪类，双冒号(::)用于CSS3伪元素。(伪元素由双冒号和伪元素名称组成)，双冒号是在之前规范中引入的，用于区分伪类和伪元素</p><h5 id="12-CSS优化、提高性能的方法有哪些"><a href="#12-CSS优化、提高性能的方法有哪些" class="headerlink" title="12.CSS优化、提高性能的方法有哪些"></a>12.CSS优化、提高性能的方法有哪些</h5><p>(1)移除空的css规则<br>(2)正确使用display属性<br>(3)不滥用浮动、web字体<br>(4)不声明过多的font-size<br>(5)不在选择符中使用ID标识符<br>(6)遵守盒模型规则<br>(7)尽量减少页面重排、重绘<br>(8)抽象提取公共样式，减少代码量</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CSS3笔记（一）</title>
      <link href="/2020/07/17/CSS3%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2020/07/17/CSS3%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<blockquote><p>CSS样式表组成：规则 + 选择器 + 声明块 + 声明（css属性+ css属性值组成的键值对）</p></blockquote><h4 id="1-基本选择器"><a href="#1-基本选择器" class="headerlink" title="1.基本选择器"></a>1.基本选择器</h4><p>通配符选择器 *{ }<br>元素选择器  body{ }   元素名<br>类选择器  .list{ }<br>ID选择器  #list{ }<br>后代选择器   .list li{ }  空格<br>分组   ,    html,body{}</p><blockquote><p>基本选择器扩展：<br>子元素选择器   #wrap &gt; .inner {}<br>也可称为直接后代选择器，此类选择器只能匹配到直接后代，不能匹配到深层次的后代元素<br>相邻兄弟选择器  #wrap #first + .inner{}<br>它只会匹配紧跟着的兄弟元素<br>通用兄弟选择器   #wrap #first ~div{}<br>它会匹配所有的兄弟元素（不需要紧跟）<br>选择器分组  h1,h2,h3{}  此处的逗号我们称之为结合符</p></blockquote><h4 id="2-属性选择器"><a href="#2-属性选择器" class="headerlink" title="2.属性选择器"></a>2.属性选择器</h4><p>①存在和值属性选择器<br>[attr]：该选择器选择包含attr属性的所有元素，不论attr的值为何<br>[attr=val]：该选择器仅选择attr属性被赋值为val的所有元素。<br>[attr~=val]：表示带有以attr命名的属性的元素<br>②子串值属性选择器<br>[attr|=val]：选择attr属性的值是val（包括val）或以val-开头的元素。<br>[attr^=val]：选择attr属性的值以val开头（包括val）的元素。<br>[attr$=val]：选择attr属性的值以val结尾（包括val）的元素。<br>[attr*=val]：选择attr属性的值中包含字符串val的元素。</p><h4 id="3-伪类与伪元素选择器"><a href="#3-伪类与伪元素选择器" class="headerlink" title="3.伪类与伪元素选择器"></a>3.伪类与伪元素选择器</h4><p>①链接伪类    注意：:link :visited :target  是作用于链接元素的<br>:link 表示作为超链接，并指向一个未访问的地址的所有锚<br>:visited 表示作为超链接，并指向一个已访问的地址的所有锚<br>:target 代表一个特殊的元素，它的id是URI的片段标识符<br>②动态伪类   注意：:hover :active 基本可以作用于所有元素<br>:hover 表示悬浮到元素上<br>:active 表示匹配被用户激活的元素（点击按住时）<br>注意：由于a标签的:link和:visited可以覆盖了所有a标签的状态，所以当:link :visited :hover :active 在身上时，:link :visited不能放在最后<br>只有下列的属性才能被应用到已访问链接（:visited）<br>color background-color border-color<br>③表单相关伪类<br>:enabled  匹配可编辑的表单<br>:disable  匹配被禁用的表单<br>:checked  匹配被选中的表单<br>:focus    匹配获焦的表单<br>④结构性伪类<br>:nth-child(index)系列<br>:first-child :last-child :nth-last-child(index) :only-child<br>:nth-of-child(index)系列<br>:first-of-child :last-of-child  :nth-last-type(index)<br>:only-of-child<br>index的值从1开始  index可以为变量n（只能是n）<br>index可以为even odd<br>#wrap ele:nth-child(index) 表示匹配#wrap中第index的子元素<br>#wrap ele:nth-of-type(index) 表示匹配#wrap中第index的ele子元素</p><blockquote><p>nth-child 和 nth-of-type有一个很重要的区别：<br>nth-of-type以元素为中心</p></blockquote><h4 id="4-css声明的优先级"><a href="#4-css声明的优先级" class="headerlink" title="4.css声明的优先级"></a>4.css声明的优先级</h4><p>选择器的特殊性<br>选择器的特殊性由选择器本身的组件确定，特殊性值表述为4个部分，如：0，0，0，0<br>一个选择器的具体特殊性如下确定：<br>①对于选择器中给定的ID属性值，加0，1，0，0<br>②对于选择器中给定的各个类属性，属性选择，或伪类加0，0，1，0<br>③对于选择器中的给定的各个元素和伪元素，加0，0，0，1<br>④通配符选择器的特殊性为0，0，0，0<br>⑤结合符对选择器特殊性没有一点贡献<br>⑥内联声明的特殊性都是1，0，0，0<br>⑦继承没有特殊性</p><h4 id="5-自定义字体"><a href="#5-自定义字体" class="headerlink" title="5.自定义字体"></a>5.自定义字体</h4><p>@font-face:允许网页开发者为其网页指定在线字体。通过这种作者自备字体的方式，可以消除对用户电脑字体的依赖<br>@font-face的两个属性：<br>font-family 所指定的字体名字将会被用于font或font-family属性<br>src 字体资源</p><blockquote><p>注意： 不能在一个CSS选择器中定义@font-face</p></blockquote><h4 id="6-文字阴影"><a href="#6-文字阴影" class="headerlink" title="6.文字阴影"></a>6.文字阴影</h4><p>text-shadow用来为文字添加阴影，而且可以添加多层，阴影值之间用逗号隔开。（多个阴影时，第一个阴影在最上边） 默认值：none  不可继承<br>text-shadow: <code>&lt;color&gt;</code> <code>&lt;offset-x&gt;</code> <code>&lt;offset-y&gt;</code> <code>&lt;blur-radius&gt;</code><br>值：<code>&lt;color&gt;</code> 可选 在偏移量之前或之后指定。如果没有指定颜色，则使用UA(用户代理)选择的颜色<br><code>&lt;offset-x&gt;</code> <code>&lt;\offset-y&gt;</code><br>必选。这些长度值指定阴影相对文字的偏移量。<br><code>&lt;offset-x&gt;</code> 指定水平偏移量。若是负值则阴影位于文字左边。<br><code>&lt;offset-y&gt;</code> 指定垂直偏移量。若是负值则阴影位于文字上面。<br>如果两者均为0，则阴影位于文字正后方<br><code>&lt;blur-radius&gt;</code> 可选  这是&lt;\length&gt;值。如果没有指定，则默认为0.<br>值越大，模糊半径越大，阴影也就越大越淡</p><h4 id="7-文字排版"><a href="#7-文字排版" class="headerlink" title="7.文字排版"></a>7.文字排版</h4><p>direction：控制文字的方向<br>要配合unicode-bidi:bidi-override;来使用<br>怎么溢出显示省略号?  四个要点<br>①white-space: nowrap;<br>②overflow: hidden;<br>③text-overflow: ellipsis;  显示一个省略号<br>④包裹区域必须不能让子元素撑开，要有指定的宽高</p><h4 id="8-盒模型阴影"><a href="#8-盒模型阴影" class="headerlink" title="8.盒模型阴影"></a>8.盒模型阴影</h4><p>box-shadow：以逗号分割列表来描述一个或多个阴影效果，可以用到几乎任何元素上。如果元素同时设置了border-radius，阴影会有圆角效果。<br>默认值：none  不可继承<br>值：inset  默认阴影在边框外。使用inset后，阴影在边框内。<br><code>&lt;offset-x&gt;</code> <code>&lt;\offset-y&gt;</code><br>这是头两个&lt;\length&gt;值，用来设置阴影偏移量。<br><code>&lt;offset-x&gt;</code> 指定水平偏移量。若是负值则阴影位于文字左边。<br><code>&lt;offset-y&gt;</code> 指定垂直偏移量。若是负值则阴影位于文字上面。<br> 如果两者均为0，则阴影位于元素后面。<br> 这时如果设置了&lt;\blur-radius&gt; 或 &lt;\spread-radius&gt;则有模糊效果<br><code>&lt;blur-radius&gt;</code>这是第三个&lt;\length&gt;值。如果没有指定，则默认为0.<br>值越大，模糊面积越大，阴影也就越大越淡。不能为负值，此时阴影边缘锐利。<br><code>&lt;spread-radius&gt;</code>这是第四个&lt;\length&gt;值。取正值时，阴影扩大；取负值时，阴影收缩。默认为0.<br><code>&lt;color&gt;</code>阴影颜色，如果没有指定，则由浏览器决定。</p><h4 id="9-resize-允许控制一个元素的可调整大小性"><a href="#9-resize-允许控制一个元素的可调整大小性" class="headerlink" title="9.resize 允许控制一个元素的可调整大小性"></a>9.resize 允许控制一个元素的可调整大小性</h4><p>（一定要配合overflow:auto使用）<br>默认值：none  不可继承<br>值：none 元素不能被用户缩放<br>both 允许用户在水平和垂直方向上调整元素的大小<br>horizontal  允许用户在水平方向上调整元素的大小vertical   允许用户在垂直方向上调整元素的大小</p><h4 id="10-box-sizing"><a href="#10-box-sizing" class="headerlink" title="10.box-sizing"></a>10.box-sizing</h4><p>content-box 默认值，标准盒子模型。width与height只包括内容的宽和高，不包括边框，内边距，外边距。<br>border-box width和height属性包括内容，内边距和边距，但不包括外边距</p><h4 id="11-边框图片"><a href="#11-边框图片" class="headerlink" title="11.边框图片"></a>11.边框图片</h4><p>border-image-source 属性定义使用一张图片来代替边框样式<br>默认值：none  不可继承</p><h4 id="12-css2背景"><a href="#12-css2背景" class="headerlink" title="12.css2背景"></a>12.css2背景</h4><p>background-image  属性用于为一个元素设置一个或多个背景图像   默认值：none 不可继承<br>background-size 设置背景图片大小<br>默认值：auto auto  不可继承<br>值：百分比：指定背景图片相对背景区<br>auto：以背景图片的比例缩放背景图片。<br>注意：单值时，这个值指定图片的宽度，图片的高度隐式的为auto<br>两个值：第一个值指定图片的宽度，第二个值指定图片的高度</p><h4 id="13-过渡"><a href="#13-过渡" class="headerlink" title="13.过渡"></a>13.过渡</h4><p>①transition-property 指定应用过渡属性的名称<br>默认值为all，表示所有可被动画的属性都表现出过渡动画<br>可以指定多个property<br>属性值： none  没有过渡动画<br>all  所有可被动画的属性都表现出过渡动画<br>②transition-duration<br>属性以秒或毫秒为单位指定过渡动画所需的时间。<br>默认值为0s，表示不出现过渡动画。<br>可以指定多个时长，每个时长会被应用到由transition-property指定的对应属性上。如果指定的时长个数小于属性个数，那么时长列表会重复。如果时长列表更长，那么该列表会被裁减。两种情况下，属性列表都保持不变。<br>注意：如果时长是0s，表示不会呈现过渡动画，属性会瞬间完成转变。不接受负值。一定要加单位（不能写0，一定要写0s）<br>③transition-timing-function<br>属性值：<br>1、ease：（加速然后减速）默认值，ease函数等同于贝塞尔曲线（0.25，0.1，0.25，1.0）<br>2、linear：（匀速），linear函数等同于贝塞尔曲线（0.0，0.0，1.0，1.0）<br>3、ease-in：（加速），ease-in函数等同于贝塞尔曲线（0.42，0，1.0，1.0）<br>4、ease-out：（减速），ease-out函数等同于贝塞尔曲线（0，0，0.58，1.0）<br>5、ease-in-out：（加速然后减速），ease-in-out函数等同于贝塞尔曲线（0.42，0，0.58，1.0）<br>6、cubic-bezier：贝塞尔曲线<br>7、step-start：等同于steps(1，start)<br>step-end：等同于steps(1，end)<br>④transition-delay 属性规定了在过渡效果开始作用之前需要等待的时间。<br>默认值：0s<br>可以指定多个延迟时间，每个延迟将会分别作用于你所指定的相符合的css属性。如果指定的时长个数小于属性个数，那么时长列表会重复。如果时长列表更长，那么该列表会被裁剪。两种情况下属性列表都保持不变<br>属性值以秒或毫秒为单位，表明动画过渡效果将在何时开始。取值为正时会延迟一段时间来响应过渡效果；取值为负时，会导致过渡立即开始。</p><p>检测过渡是否完成<br>当过渡完成时触发一个事件，在符合标准的浏览器下，这个事件是transitonend（每一个拥有过渡的属性在其完成过渡时都会触发一次transitonend事件）<br>在transition完成前设置display:none，事件同样不会被触发</p><p>过渡的天坑：<br>①在元素首次渲染还没有完成的情况下,是不会触发过渡的<br>②在绝大部分变换样式切换时,如果变换函数的位置 个数不相同也不会触发过渡</p><h4 id="14-2D变形"><a href="#14-2D变形" class="headerlink" title="14.2D变形"></a>14.2D变形</h4><p>①transform<br>transform属性允许修改css视觉格式模型的坐标空间<br><strong>transform属性，只对block级元素生效</strong><br>②平移（translate）<br>X方向平移：transform：translateX(tx)<br>Y方向平移：transform：translateY(ty)<br>二维平移：transform：translate(tx[,ty]);如果ty没有指定，它的值默认为0<br>③倾斜（skew）<br>transform：skewX(45deg)<br>X方向倾斜：transform：skewX(angle)<br>skewX(45deg):参数值以deg为单位 代表与y轴之间的角度<br>Y方向倾斜：transform：skewY(angle)<br>skewY(45deg):参数值以deg为单位 代表与x轴之间的角度<br>正值：拉正斜杠方向的两个角<br>负值：拉反斜杠方向的两个角<br>④缩放（scale）<br>transform：scale(2)<br>X方向缩放：transform：scaleX(sx)<br>Y方向缩放：transform：scaleY(sy)<br>二维缩放：transform：scale(sx[,sy]);如果sy没有指定，它默认和sx的值相同<br>⑤基点的变换<br>transform-origin  CSS属性更改一个元素变形的基点。</p><p>要点：transform变换组合，浏览器是从右向左渲染的<br>transform: translateX(100px) scale(.5)<br>底层原理是矩阵运算</p><p>top,height 百分比参照与包含快的高度<br>left,margin,padding,width 百分比参照与包含快的宽度<br>translate(-50%,-50%) 百分比参照于自身的宽高<br>background-position  百分比参照于（图片区域-图片的位图像素值）</p><h4 id="15-3D变换"><a href="#15-3D变换" class="headerlink" title="15.3D变换"></a>15.3D变换</h4><p>①景深<br>简单的理解，景深就是我们的肉眼距离显示器的距离，景深越大，元素离我们越远，效果就不好，在CSS3中，perspective用于激活一个3D空间，属性值就是景深大小（默认none无景深）<br>景深：让3D场景有近打远小的效果，是一个不可继承属性，可以作用于后代元素（不是作用于本身）<br>原理：<br>    景深越大，灭点越远，元素变形更小<br>    景深越小，灭点越近，元素变形更大<br>②3D缩放<br>transform:scaleZ(number)<br>transform:scale3d(scaleX,scaleY,scaleZ);<br>注意：如果只设置scaleZ(number)，你会发现元素并没有被扩大或压缩，scaleZ(number)需要和translateZ(length)配合使用，number乘以length得到的值，是元素沿z轴移动的距离，从而使得感觉被扩大或压缩<br>③3D平移<br>transform:translateZ(length)是3D Transformaton特有的，其他两个2D中就有<br>translateZ 不能是百分比值；那样移动是没有意义的 。<br>transform:translate3d(translateX,translateY,translateZ);<br>translateZ 不能是百分比值；那样移动是没有意义的 。</p><h4 id="16-动画（animation）"><a href="#16-动画（animation）" class="headerlink" title="16.动画（animation）"></a>16.动画（animation）</h4><p>tranform与动画的区别：<br>tranform需要用户自己去触发，动画则不需要<br>①animation-name属性指定应用的一系列动画，每个名称代表一个由@keyframes定义的动画序列<br>值： none  特殊关键字，表示无关键帧。<br>keyframename  标识动画的字符串<br>②animation-duration<br>属性指定一个动画周期的时长。<br>默认值为0s，表示无动画。<br>值：一个动画周期的时长 ，单位为秒或者毫秒，无单位值无效<br>注意：负值无效，浏览器会忽略该声明，但是一些早期的带前缀的声明会将负值当作0s<br>③animation-timing-function<br>动画的默认效果：由慢变快再变慢<br>属性值：<br>1、ease：（加速然后减速）默认值，ease函数等同于贝塞尔曲线（0.25，0.1，0.25，1.0）<br>2、linear：（匀速），linear函数等同于贝塞尔曲线（0.0，0.0，1.0，1.0）<br>3、ease-in：（加速），ease-in函数等同于贝塞尔曲线（0.42，0，1.0，1.0）<br>4、ease-out：（减速），ease-out函数等同于贝塞尔曲线（0，0，0.58，1.0）<br>5、ease-in-out：（加速然后减速），ease-in-out函数等同于贝塞尔曲线（0.42，0，0.58，1.0）<br>6、cubic-bezier：贝塞尔曲线<br>④animation-delay 定义动画开始前等待的时间，以秒或毫秒计（属于动画外的范畴）<br>⑤animation-iteration-count 定义了动画执行的次数（属于动画内的范畴） 重复的是关键帧<br>⑥animation-fill-mode 属性规定动画在播放之前或之后，其动画效果是否可见。<br>元素在动画外的状态<br>backwards：from之前的状态与from的状态保持一致<br>forwards：to之后的状态与to的状态保持一致<br>both：backwards+forwards<br>⑦animation-play-state 定义了动画执行的运行和暂停<br>animation-play-state: paused;   //动画暂停<br>⑧关键帧（@keyframes）<br>语法：<br>    @keyframes animationName{<br>        keyframes-selector{<br>            css-style;<br>    }<br>}<br>animationName：必写项；定义动画的名称<br>keyframes-selector：必写项，动画持续时间的百分比<br>from：0%   to：100%<br>css-style：css声明</p><h4 id="17-flex布局（弹性盒子布局）"><a href="#17-flex布局（弹性盒子布局）" class="headerlink" title="17.flex布局（弹性盒子布局）"></a>17.flex布局（弹性盒子布局）</h4><p>①老版本<br>    容器<br>        容器的布局方向<br>        -webkit-box-orient:horizontal/vertical<br>        控制主轴是哪一根<br>        horizontal：x轴<br>        vertical：y轴<br>        容器的排列方向<br>        -webkit-box-direction:normal/reverse<br>        控制主轴的方向<br>        normal：从左往右/从上到下（正方向）<br>        reverse：从右往左/从下到上（反方向）<br>        富裕空间的管理<br>            只决定富裕空间的位置，不会给项目区分配空间<br>        主轴<br>            -webkit-box-pack<br>                主轴是x轴<br>                    start:在右边<br>                    end:在左边<br>                    center:在项目两边<br>                    justify:在项目之间<br>                主轴是y轴<br>                    start:在下边<br>                    end:在上边<br>                    center:在项目两边<br>                    justify:在项目之间<br>        侧轴<br>            -webkit-box-algin<br>                侧轴是x轴<br>                    start:在右边<br>                    end:在左边<br>                    center:在项目两边<br>                侧轴是y轴<br>                    start:在下边<br>                    end:在上边<br>                    center:在项目两边<br>②新版本<br>    容器<br>        容器的布局方向<br>        容器的排列方向<br>            flex-direction<br>            控制主轴是哪一根，控制主轴的方向<br>            row：从左往右的x轴<br>            row-reverse：从右往左的x轴<br>            column：从上往下的y轴<br>            column-reverse：从下往上的y轴<br>        富裕空间的管理<br>        只决定富裕空间的位置，不会给项目区分配空间<br>        主轴<br>            justify-content<br>                flex-start:在主轴的正方向<br>                flex-end:在主轴的反方向<br>                center:在两边<br>                space-between:在项目之间<br>                space-around:在项目两边<br>        侧轴<br>            algin-items<br>                flex-start:在侧轴的正方向<br>                flex-end:在侧轴的反方向<br>                center:在两边<br>                baseline:基线对齐<br>                stretch:等高布局（项目没有高度）<br>    项目<br>        弹性空间管理<br>        flex-grow：弹性因子（默认值为0）<br>③新版本新增的<br>    容器<br>        flex-wrap：控制的是侧轴的方向<br>                nowrap 不换行<br>                wrap     侧轴方向由上而下 （flex-shrink失效）<br>                nowrap 侧轴方向由下而上（flex-shrink失效）<br>        align-content:多行/列时侧轴富裕空间的管理（把多行/列看成一个整体）<br>        flex-flow：flex-direction和flex-wrap的简写属性<br>本质上控制了主轴和侧轴分别是哪一根，以及它们的方向<br>    项目<br>        order：控制项目的排列顺序<br>        align-self：项目自身富裕空间的管理<br>        flex-shrink：收缩因子（默认值为1）<br>        flex-basis：伸缩规则计算的基准值（默认拿width或height的值）</p><p>④伸缩规则<br>    flex-basis<br>    flex-grow<br>        可用空间 = （容器大小 - 所有相邻项目flex-basis的总和）<br>        可扩展空间 = （可用空间/所有相邻项目flex-grow的总和）<br>        每项伸缩大小 = （伸缩基准值flex-basis + （可扩展空间*flex-grow值））</p><p>⑤侧轴富裕空间的管理<br>    单行单列<br>        align-items<br>        align-self  (优先级高)<br>    多行多列<br>        align-content</p><h4 id="18-媒体查询（-media）"><a href="#18-媒体查询（-media）" class="headerlink" title="18.媒体查询（@media）"></a>18.媒体查询（@media）</h4><p>(1)媒体类型<br>all              所有媒体（默认值）<br>screen        彩色屏幕<br>print           打印预览<br>(2)媒体属性<br>①width:浏览器窗口的尺寸（min max）<br>min-width:800px         &gt;=800px<br>max-width:800px        &lt;=800px<br>②device-width:设备独立像素（min max）<br>pc端：分辨率         移动端：具体看机器的参数<br>③device-pixel-ratio （必须加-webkit-前缀）<br>pc端：1        移动端：具体看机器的参数<br>(3)关键字<br>①and:代表与的意思，一般用and来连接媒体类型的媒体属性<br>②only：和浏览器兼容性有关<br>    老版本的浏览器只支持媒体类型，不支持带媒体属性的查询<br>    @media screen{}           @media only{}<br>③（,）:代表或的意思<br>④not:取反</p><h4 id="19-多列布局"><a href="#19-多列布局" class="headerlink" title="19.多列布局"></a>19.多列布局</h4><p>(1)栏目宽度<br>column-width:指定每一栏的宽度<br>(2)栏目列数<br>column-count:指定要多少栏<br>(3)栏目距离<br>column-gap:xxpx;<br>(4)栏目间隔线<br>column-rule:指定栏目之间的间隔线样式</p>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript高级程序设计之第二、三章</title>
      <link href="/2020/06/22/JavaScript%E9%AB%98%E7%BA%A7%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%EF%BC%88%E7%AC%AC3%E7%89%88%EF%BC%89%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%E4%B9%8B%E7%AC%AC%E4%BA%8C%E7%AB%A0/"/>
      <url>/2020/06/22/JavaScript%E9%AB%98%E7%BA%A7%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%EF%BC%88%E7%AC%AC3%E7%89%88%EF%BC%89%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%E4%B9%8B%E7%AC%AC%E4%BA%8C%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<p>最近重新翻了一下《JavaScript高级程序设计(第3版)》,整理一下读书笔记<br><img src="/images/JavaScript高级程序设计之第二、三章/1.png" alt width="377px" height="450px"></p><h3 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h3><p>script标签的各个属性：</p><ol><li>src：常用，包含要执行的外部文件，<strong>可以包含来自外部域的JavaScript文件</strong></li><li>async：立即下载，只对外部脚本有效，会影响js文件的执行顺序，不建议用</li><li>charset：指定字符集</li><li>defer：延迟加载，只对外部脚本有效，不建议用</li><li>type：脚本语言的内容类型</li></ol><hr><p><strong>包含在script元素内部的JavaScript代码将从上到下依次解释</strong><br>在HTML中嵌入JavaScript代码虽然没问题，但是最好的做法还是尽可能使用外部文件来包含JavaScript代码。有如下优点：<br>①可维护性<br>②可缓存：如果有两个页面都使用同一个文件，这个文件只需下载一次，加快页面加载的速度。<br>③适应未来</p>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
            <tag> JavaScript高级程序设计(第3版) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue项目系列报错(一)</title>
      <link href="/2020/06/12/vue%E9%A1%B9%E7%9B%AE%E7%B3%BB%E5%88%97%E6%8A%A5%E9%94%99-%E4%B8%80/"/>
      <url>/2020/06/12/vue%E9%A1%B9%E7%9B%AE%E7%B3%BB%E5%88%97%E6%8A%A5%E9%94%99-%E4%B8%80/</url>
      
        <content type="html"><![CDATA[<p>今天，vue启动项目的时候报错<br><font color="red">This dependency was not found:* !!vue-style-loader!css-loader?{“sourceMap”:</font>如下图：<br><img src="/images/vue%E9%A1%B9%E7%9B%AE%E7%B3%BB%E5%88%97%E6%8A%A5%E9%94%99-%E4%B8%80/1.png" alt></p><p>一看到vue-style-loader!css-loader，估计就是没有安装依赖，还是去谷歌确认了一下，感谢<a href="https://blog.csdn.net/dt1991524/article/details/83413211" target="_blank" rel="noopener">honey缘木鱼大神</a>的分享：</p><blockquote><p>这是由于css解析的时候出了问题，解决方案为：</p></blockquote><p>首先看你使用的CSS语言是什么,是 常规的 或者 less 或者 sass。</p><ol><li>如果是 常规 的，执行 <code>npm install stylus-loader css-loader style-loader --save-dev</code> 安装依赖就行。</li><li>如果是 less 的，执行 <code>npm install less less-loader --save-dev</code> 安装依赖就行。</li><li>如果是 sass 的，执行 <code>npm install sass sass-loader --save-dev</code> 安装依赖就行。或者（<code>$npm intall sass-loader --save</code> ; <code>$npm install node-sass --save</code>）</li></ol>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue中的插槽使用</title>
      <link href="/2020/06/10/Vue%E4%B8%AD%E7%9A%84%E6%8F%92%E6%A7%BD%E4%BD%BF%E7%94%A8/"/>
      <url>/2020/06/10/Vue%E4%B8%AD%E7%9A%84%E6%8F%92%E6%A7%BD%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="Vue插槽详解-明天再更新其他插槽"><a href="#Vue插槽详解-明天再更新其他插槽" class="headerlink" title="Vue插槽详解(明天再更新其他插槽)"></a>Vue插槽详解(明天再更新其他插槽)</h2><p>Vue插槽，是学习vue中必不可少的一节。插槽（Slot）是Vue提出来的一个概念，正如名字一样，插槽就是个坑，可以往里面填东西。<br>这次在做Vue仿B站移动端的项目中有略微使用到插槽，感觉还挺容易理解的。<br>没想到今晚去谷歌了一下，才发现这真就是个坑，不只具名插槽的用法，还有默认插槽和作用域插槽的用法<br>用于决定将所携带的内容，插入到指定的某个位置，从而使模板分块，具有模块化的特质和更大的重用性。插槽显不显示、怎样显示是由父组件来控制的，而插槽在哪里显示就由子组件来进行控制。</p><h3 id="具名插槽"><a href="#具名插槽" class="headerlink" title="具名插槽"></a>具名插槽</h3><p>　　需要多个插槽的情况，slot 元素有一个特殊的属性：name，用来定义额外的插槽。一个不带 name的slot 出口会带有隐含的名字“default”。<br>例如：<br>子组件<br><code>&lt;template&gt;</code><br>    <code>&lt;div class=&quot;slottwo&quot;&gt;</code><br>      <code>&lt;div&gt;slottwo&lt;/div&gt;</code><br>      <code>&lt;slot name=&quot;header&quot;&gt;&lt;/slot&gt;</code><br>      <code>&lt;slot&gt;&lt;/slot&gt;</code><br>    <code>&lt;slot name=&quot;footer&quot;&gt;&lt;/slot&gt;</code><br>    <code>&lt;/div&gt;</code><br><code>&lt;/template&gt;</code><br>在子组件中定义了三个slot标签，其中有两个分别添加了name属性header和footer</p><p>父组件<br><code>&lt;template&gt;</code><br> <code>&lt;div&gt;</code><br> <code>我是父组件</code><br> <code>&lt;slot-two&gt;</code><br>  <code>&lt;p&gt;啦啦啦，啦啦啦，我是卖报的小行家&lt;/p&gt;</code><br>  <code>&lt;template slot=&quot;header&quot;&gt;</code><br>   <code>&lt;p&gt;我是name为header的slot&lt;/p&gt;</code><br>  <code>&lt;/template&gt;</code><br>  <code>&lt;p slot=&quot;footer&quot;&gt;我是name为footer的slot&lt;/p&gt;</code><br> <code>&lt;/slot-two&gt;</code><br> <code>&lt;/div&gt;</code><br><code>&lt;/template&gt;</code><br>在父组件中使用template并写入对应的slot值来指定该内容在子组件中现实的位置（当然也不用必须写到template），没有对应值的其他内容会被放到子组件中没有添加name属性的slot中<br><img src="/images/Vue%E4%B8%AD%E7%9A%84%E6%8F%92%E6%A7%BD%E4%BD%BF%E7%94%A8/1.png" alt></p><h3 id="插槽的默认内容"><a href="#插槽的默认内容" class="headerlink" title="插槽的默认内容"></a>插槽的默认内容</h3><p>父组件<br><code>&lt;template&gt;</code><br><code>&lt;div&gt;</code><br><code>我是父组件</code><br><code>&lt;slot-two&gt;&lt;/slot-two&gt;</code><br><code>&lt;/div&gt;</code><br><code>&lt;/template&gt;</code></p><p>子组件<br><code>&lt;template&gt;</code><br> <code>&lt;div class=&quot;slottwo&quot;&gt;</code><br> <code>&lt;slot&gt;我不是卖报的小行家&lt;/slot&gt;</code><br> <code>&lt;/div&gt;</code><br><code>&lt;/template&gt;</code><br>可以在子组件的slot标签中写入内容，当父组件没有写入内容时会显示子组件的默认内容，当父组件写入内容时，会替换子组件的默认内容<br><img src="/images/Vue%E4%B8%AD%E7%9A%84%E6%8F%92%E6%A7%BD%E4%BD%BF%E7%94%A8/2.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo搭建个人博客</title>
      <link href="/2020/06/09/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2020/06/09/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h2 id="搭建环境准备"><a href="#搭建环境准备" class="headerlink" title="搭建环境准备"></a>搭建环境准备</h2><!-- 大概可以分为以下三步：  --><h3 id="1-Node-js-的安装和准备"><a href="#1-Node-js-的安装和准备" class="headerlink" title="1. Node.js 的安装和准备"></a>1. Node.js 的安装和准备</h3><p><a href="https://nodejs.org/zh-cn/" target="_blank" rel="noopener">Node.js的官网下载链接</a></p><h3 id="2-git的安装和准备"><a href="#2-git的安装和准备" class="headerlink" title="2. git的安装和准备"></a>2. git的安装和准备</h3><p><a href="https://git-scm.com/" target="_blank" rel="noopener">Git的官网下载链接</a></p><!-- ### 3. gitHub账户的配置 --><p><font color="#272822">因为时隔太久，先贴上需要的软件官网下载链接，后续再整理相关环境安装和配置，手写狗头保命！</font><br><strong>今天的重要部分来了，我已经默认环境搭配好了，大家先看看最后效果，大佬勿喷！</strong></p><h3 id="3-hexo的安装和准备"><a href="#3-hexo的安装和准备" class="headerlink" title="3. hexo的安装和准备"></a>3. hexo的安装和准备</h3><ol><li><p>用npm全局安装cnpm<br><code>npm install -g cnpm --registry=http://registry.npm.taobao.org</code></p></li><li><p>用cnpm全局安装hexo（好吧，其实是国内安装比较快，cnpm是淘宝的）<br><code>cnpm install -g hexo-cli</code><br><img src="/images/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/1.png" alt></p></li><li><p>hexo -v 查看hexo是否安装成功及hexo版本<br><img src="/images/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/2.png" alt></p></li><li><p>自己新建一个文件夹后<br><code>hexo init blog</code> 初始化博客<br><img src="/images/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/3.png" alt><br>出现 <font color="red">INFO  Start blogging with Hexo!</font>表示博客初始化成功！</p></li><li><p>进入博客目录，打开cmd，然后hexo s开启博客<br><img src="/images/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/4.png" alt><br><img src="/images/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/5.png" alt></p></li><li><p>博客启动成功<br><img src="/images/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/6.png" alt></p></li><li><p>进入博客目录，新建一篇博客文章  hexo n “我的第一篇博客文章”<br><strong>新建博客文章在主目录文件夹下\source_posts文件夹里面</strong><br><img src="/images/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/7.png" alt></p></li><li><p>打开我的第一篇博客文章.md，使用Markdown语法进行编写，Ctrl+s进行保存<br><img src="/images/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/8.png" alt></p></li><li><p>hexo clean 清理一下<br><img src="/images/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/9.png" alt></p></li><li><p>重新生成  hexo g<br><img src="/images/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/10.png" alt></p></li><li><p>重新hexo s开启博客<br><img src="/images/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/11.png" alt></p></li></ol><p>至此，博客就在本地搭建好了，接下来就是部署到GitHub上，让其他人也可以访问</p><h3 id="4-将博客部署到GitHub上"><a href="#4-将博客部署到GitHub上" class="headerlink" title="4. 将博客部署到GitHub上"></a>4. 将博客部署到GitHub上</h3><ol><li><p>安装git部署插件<br><code>cnpm install --save hexo-deployer-git</code><br><img src="/images/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/12.png" alt><br><font color="red">warning可忽略不管</font></p></li><li><p><strong>关键：</strong>设置_config.yml文件<br><img src="/images/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/13.png" alt></p></li><li><p>到文件最底部有个Deployment配置，配置相关信息<br><img src="/images/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/14.png" alt></p></li><li><p>部署到远端上<br><code>hexo d</code><br><img src="/images/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/15.png" alt><br>中间需要输入github账户名和密码：<br><img src="/images/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/16.png" alt></p></li><li><p>github上生成<br><img src="/images/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/17.png" alt></p></li><li><p>访问博客链接<br><img src="/images/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/18.png" alt></p></li><li><p>可以更换自己喜欢的主题 链接在此：<a href="https://hexo.io/themes/" target="_blank" rel="noopener">https://hexo.io/themes/</a><br><img src="/images/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/19.png" alt></p></li><li><p>具体安装主题步骤见各个作者github教程<br>如:安装3-hexo主题<br><code>git clone https://github.com/yelog/hexo-theme-3-hexo.git themes/3-hexo</code><br><img src="/images/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/20.png" alt><br><img src="/images/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/21.png" alt><br><img src="/images/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/22.png" alt></p></li><li><p>清理一下<br><code>hexo clean</code></p></li><li><p>重新生成<br><code>hexo g</code></p></li><li><p>重新<code>hexo s</code>开启博客</p></li><li><p>重新部署到远端上<br><code>hexo d</code></p></li></ol><h3 id="自此，完结撒花！！！吃饭吃饭"><a href="#自此，完结撒花！！！吃饭吃饭" class="headerlink" title="自此，完结撒花！！！吃饭吃饭"></a>自此，完结撒花！！！吃饭吃饭</h3><blockquote><p>最后放出<strong>一些大佬相关资料链接</strong>:</p></blockquote><ol><li>hexo+github搭建个人博客：<br><a href="https://blog.csdn.net/shouldnotappearcalm/article/details/79185982" target="_blank" rel="noopener">https://blog.csdn.net/shouldnotappearcalm/article/details/79185982</a></li><li>hexo主题—自定义样式：<br><a href="https://blog.csdn.net/qq_42595443/article/details/82263318" target="_blank" rel="noopener">https://blog.csdn.net/qq_42595443/article/details/82263318</a></li><li>Hexo+Github构建个人博客 （五）：错误集<br><a href="https://blog.csdn.net/arvin0/article/details/71338667" target="_blank" rel="noopener">https://blog.csdn.net/arvin0/article/details/71338667</a></li></ol><blockquote><p>明天见，预告：更新文章<br><strong>Vue中的插槽使用</strong></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[HTML+CSS+JS]实现网站3D卡片效果</title>
      <link href="/2020/01/07/HTML-CSS-JS-%E5%AE%9E%E7%8E%B0%E7%BD%91%E7%AB%993D%E5%8D%A1%E7%89%87%E6%95%88%E6%9E%9C/"/>
      <url>/2020/01/07/HTML-CSS-JS-%E5%AE%9E%E7%8E%B0%E7%BD%91%E7%AB%993D%E5%8D%A1%E7%89%87%E6%95%88%E6%9E%9C/</url>
      
        <content type="html"><![CDATA[<p>预告预告，还没写完。。。。。<br>话不多说，先上代码：</p><blockquote><p><code>&lt;!DOCTYPE html&gt;</code><br><code>&lt;html lang=&quot;en&quot;&gt;</code><br><code>&lt;head&gt;</code><br>    <code>&lt;meta charset=&quot;UTF-8&quot;&gt;</code><br>    <code>&lt;title&gt;网站3D卡片效果&lt;/title&gt;</code><br>    <code>&lt;script src=&quot;https://cdn.bootcss.com/jquery/3.4.1/jquery.min.js&quot;&gt;&lt;/script&gt;</code><br>    <code>&lt;!-- 自己邮箱注册的icon引用 --&gt;</code><br>    <code>&lt;script src=&quot;https://use.fontawesome.com/14a49508f9.js&quot;&gt;&lt;/script&gt;</code><br>    <code>&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;style.css&quot;&gt;</code><br><code>&lt;/head&gt;</code><br><code>&lt;body&gt;</code><br>    <code>&lt;div class=&quot;business-card middle&quot;&gt;</code><br>        <code>&lt;div class=&quot;front&quot;&gt;</code><br>            <code>&lt;h2&gt;首页&lt;/h2&gt;</code><br>            <code>&lt;span&gt;meteor&lt;/span&gt;</code><br>            <code>&lt;ul class=&quot;contact-info&quot;&gt;</code><br>                <code>&lt;li&gt;</code><br>                    <code>&lt;i class=&quot;fa fa-mobile fa-2x&quot;&gt;&lt;/i&gt;+手机号</code><br>                <code>&lt;/li&gt;</code><br>                <code>&lt;li&gt;</code><br>                    <code>&lt;i class=&quot;fa fa-envelope&quot;&gt;&lt;/i&gt;+邮箱</code><br>                <code>&lt;/li&gt;</code><br>                <code>&lt;li&gt;</code><br>                    <code>&lt;i class=&quot;fa fa-map-marker&quot;&gt;&lt;/i&gt;+地址</code><br>                <code>&lt;/li&gt;</code><br>            <code>&lt;/ul&gt;</code><br>        <code>&lt;/div&gt;</code><br>        <code>&lt;div class=&quot;back&quot;&gt;</code><br>            <code>&lt;span&gt;meteor&lt;/span&gt;</code><br>        <code>&lt;/div&gt;</code><br>    <code>&lt;/div&gt;</code><br>    <code>&lt;script&gt;</code><br>        <code>$(&quot;.business-card&quot;).click(function(event) {</code><br>            <code>$(&quot;.business-card&quot;).toggleClass(&#39;business-card-active&#39;);</code><br>        <code>});</code><br>    <code>&lt;/script&gt;</code><br><code>&lt;/body&gt;</code><br><code>&lt;/html&gt;</code></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 大前端 </category>
          
          <category> 每日坚持一练 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大前端 </tag>
            
            <tag> 每日坚持一练 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[HTML+CSS+JS]五分钟实现炫酷加载效果</title>
      <link href="/2019/09/28/HTML-CSS-JS-%E4%BA%94%E5%88%86%E9%92%9F%E5%AE%9E%E7%8E%B0%E7%82%AB%E9%85%B7%E5%8A%A0%E8%BD%BD%E6%95%88%E6%9E%9C/"/>
      <url>/2019/09/28/HTML-CSS-JS-%E4%BA%94%E5%88%86%E9%92%9F%E5%AE%9E%E7%8E%B0%E7%82%AB%E9%85%B7%E5%8A%A0%E8%BD%BD%E6%95%88%E6%9E%9C/</url>
      
        <content type="html"><![CDATA[<p>预告预告，还没写完。。。。。</p>]]></content>
      
      
      <categories>
          
          <category> 大前端 </category>
          
          <category> 每日坚持一练 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大前端 </tag>
            
            <tag> 每日坚持一练 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客添加网易云音乐</title>
      <link href="/2019/09/18/Hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90/"/>
      <url>/2019/09/18/Hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90/</url>
      
        <content type="html"><![CDATA[<p>  一个单纯只有文字和图片的博客有点太安静，怎样给你的博客添加一个音乐播放器？怎样在你的文章中添加一首应景的BGM，这些都非常容易做到。</p><h3 id="为主页添加背景音乐"><a href="#为主页添加背景音乐" class="headerlink" title="为主页添加背景音乐"></a><strong>为主页添加背景音乐</strong></h3><p>我的博客中，我在文章目录侧边栏下面添加网易音乐播放器，让别人打开我的博客首页就开始播放这首歌。这里用添加网易云音乐外链播放器的方法来添加背景音乐（其他音乐播放器一样）。<br>1、首先打开<a href="https://music.163.com/" target="_blank" rel="noopener"><strong>网易云音乐网页端</strong></a>(注意客户端无法添加外链)登录你的账号，搜索《晴天》这首歌，点击播放。<br>2、在左侧看到“<strong>生成外链播放器</strong>”，点击获取外链（很多歌曲因为版权问题没法获取外链，可以尝试寻找无版权的版本）。<br><img src="/images/Hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90/1.jpg" alt><br>3、这里可以更改音乐播放器的在你的主页中显示的尺寸，还可以选择是否自动播放。这里选择iframe插件，复制地址。<br><img src="/images/Hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90/2.jpg" alt><br>4、这里要注意外链代码插入的位置，比如我想把外链播放器放在侧边栏文章目录这一项之后，我就需要把代码放到nav相关代码后面。<br><img src="/images/Hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90/3.jpg" alt><br>5、若想插入自己录制的音频，先将音频上传到音乐网站，再获取外链即可。</p><h3 id="在文章中添加歌单"><a href="#在文章中添加歌单" class="headerlink" title="在文章中添加歌单"></a><strong>在文章中添加歌单</strong></h3><p>在文章中添加音乐就更简单了，直接将音乐外链插入到文章特定位置就可以了。<br>但如果想要分享很多首歌呢，怎样添加一个歌单呢？<br>首先将想要放到文章中的歌曲添加进一个歌单，然后打开“我的主页”，会看到“我创建的歌单”，进入歌单，便看到“生成外链播放器”了。<br><img src="/images/Hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90/4.jpg" alt><br><img src="/images/Hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90/5.jpg" alt></p><h3 id="在文章中添加视频播放器"><a href="#在文章中添加视频播放器" class="headerlink" title="在文章中添加视频播放器"></a><strong>在文章中添加视频播放器</strong></h3><p>添加视频外链的方法同添加音乐外链一样。打开视频网站（<strong>非客户端</strong>），点击分享，复制HTML外链地址，插入到文章中就可以了。<br><img src="/images/Hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90/6.jpg" alt><br>同样如果想插入自己录制的视频，比如一段视频教程，可以先上传视频到视频网站，然后再获取外链。</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sublime Text3搭配LiveReload实现前端实时刷新页面</title>
      <link href="/2019/09/07/Sublime-Text3%E6%90%AD%E9%85%8DLiveReload%E5%AE%9E%E7%8E%B0%E5%89%8D%E7%AB%AF%E5%AE%9E%E6%97%B6%E5%88%B7%E6%96%B0%E9%A1%B5%E9%9D%A2/"/>
      <url>/2019/09/07/Sublime-Text3%E6%90%AD%E9%85%8DLiveReload%E5%AE%9E%E7%8E%B0%E5%89%8D%E7%AB%AF%E5%AE%9E%E6%97%B6%E5%88%B7%E6%96%B0%E9%A1%B5%E9%9D%A2/</url>
      
        <content type="html"><![CDATA[<p>介绍：</p><p>LiveReload是一款连接编辑器与浏览器解放F5的开发工具。LiveReload会监视文件系统的变化，一旦你保存文件，它就自动将浏览器刷新。所以当你改变保存一个CSS文件或图像，浏览器是即时刷新页面，无需你手动点击F5刷新。</p><h3 id="一、下载安装插件LiveReload"><a href="#一、下载安装插件LiveReload" class="headerlink" title=" 一、下载安装插件LiveReload"></a><font color="#459BD9"> 一、下载安装插件LiveReload</font></h3><p>在Chrome应用商店下载插件LiveReload，点击添加到Chrome后在菜单栏中显示一个有着空心圆的图标。<br><a href="https://chrome.google.com/webstore/search/livereload" target="_blank" rel="noopener">LiveReload下载链接</a><br><img src="/images/Sublime-Text3%E6%90%AD%E9%85%8DLiveReload%E5%AE%9E%E7%8E%B0%E5%89%8D%E7%AB%AF%E5%AE%9E%E6%97%B6%E5%88%B7%E6%96%B0%E9%A1%B5%E9%9D%A2/2.jpg" alt></p><h3 id="二、添加完后在扩展程序页面，点击LiveReload的详细信息，打开【允许访问文件网址】"><a href="#二、添加完后在扩展程序页面，点击LiveReload的详细信息，打开【允许访问文件网址】" class="headerlink" title="二、添加完后在扩展程序页面，点击LiveReload的详细信息，打开【允许访问文件网址】"></a><font color="#459BD9">二、添加完后在扩展程序页面，点击LiveReload的详细信息，打开【允许访问文件网址】</font></h3><p><img src="/images/Sublime-Text3%E6%90%AD%E9%85%8DLiveReload%E5%AE%9E%E7%8E%B0%E5%89%8D%E7%AB%AF%E5%AE%9E%E6%97%B6%E5%88%B7%E6%96%B0%E9%A1%B5%E9%9D%A2/3.jpg" alt></p><h3 id="三、Sublime-Text3下载LiveReload"><a href="#三、Sublime-Text3下载LiveReload" class="headerlink" title="三、Sublime Text3下载LiveReload"></a><font color="#459BD9">三、Sublime Text3下载LiveReload</font></h3><p>通过在Sublime Text3中：Ctrl+Shift+P→ install Package→livereload<br><img src="/images/Sublime-Text3%E6%90%AD%E9%85%8DLiveReload%E5%AE%9E%E7%8E%B0%E5%89%8D%E7%AB%AF%E5%AE%9E%E6%97%B6%E5%88%B7%E6%96%B0%E9%A1%B5%E9%9D%A2/1.jpg" alt></p><h3 id="四、配置并启用LiveReload"><a href="#四、配置并启用LiveReload" class="headerlink" title="四、配置并启用LiveReload"></a><font color="#459BD9">四、配置并启用LiveReload</font></h3><p>配置LiveReload</p><p>Preference&gt;Package Settings&gt;LiveReload&gt;Settings User，复制下面的代码粘贴保存<br><code>{&quot;enabled_plugins&quot;: [&quot;SimpleReloadPlugin&quot;,&quot;SimpleRefresh&quot;]}</code><br>有些安装插件后Settings User中会有此代码</p><h3 id="五、使用"><a href="#五、使用" class="headerlink" title="五、使用"></a><font color="#459BD9">五、使用</font></h3><p>点击 Chrome菜单栏中LiveReload 图标，中心的空心小圆圈<br><img src="/images/Sublime-Text3%E6%90%AD%E9%85%8DLiveReload%E5%AE%9E%E7%8E%B0%E5%89%8D%E7%AB%AF%E5%AE%9E%E6%97%B6%E5%88%B7%E6%96%B0%E9%A1%B5%E9%9D%A2/4.jpg" alt>会变成实心<br><img src="/images/Sublime-Text3%E6%90%AD%E9%85%8DLiveReload%E5%AE%9E%E7%8E%B0%E5%89%8D%E7%AB%AF%E5%AE%9E%E6%97%B6%E5%88%B7%E6%96%B0%E9%A1%B5%E9%9D%A2/5.jpg" alt>，表示已经启用LiveReload并连接成功。Sublime text3中的任何变化，Ctrl+S后，立即在Chrome中看到相应变化。</p>]]></content>
      
      
      <categories>
          
          <category> 大前端 </category>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sublime Text3软件及插件安装</title>
      <link href="/2019/09/05/Sublime-Text3%E8%BD%AF%E4%BB%B6%E5%8F%8A%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85/"/>
      <url>/2019/09/05/Sublime-Text3%E8%BD%AF%E4%BB%B6%E5%8F%8A%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h3 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a><p style="color:rgb(255,187,103)">软件安装</p></h3><p>Sublime Text官网下载：<a href="https://www.sublimetext.com/" target="_blank" rel="noopener">https://www.sublimetext.com/</a><br><img src="/images/Sublime-Text3%E8%BD%AF%E4%BB%B6%E5%8F%8A%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85/1.png" alt></p><p>下载所需要的Sublime Text版本，根据提示安装。</p><h3 id="插件安装"><a href="#插件安装" class="headerlink" title="插件安装"></a><p style="color:rgb(255,187,103)">插件安装</p></h3><!--直接下载安装包解压缩到Packages目录（preferences===>Browse Packages显示已安装的插件）。-->用Package Control安装插件：<ol><li>按Ctrl+ `  (此符号为tab按键上面的按键) 调出console（注：避免热键冲突） 粘贴以下代码到命令行并回车：<br><code>import urllib.request,os; pf = &#39;Package Control.sublime-package&#39;; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), &#39;wb&#39;).write(urllib.request.urlopen( &#39;http://sublime.wbond.net/&#39; + pf.replace(&#39; &#39;,&#39;%20&#39;)).read())</code></li></ol><p>如图，上面的代码复制到红框地方，按回车键，会看到下面出现东西在左右摆动，说明正在下载。<br><img src="/images/Sublime-Text3%E8%BD%AF%E4%BB%B6%E5%8F%8A%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85/2.jpg" alt></p><ol start="2"><li><p>下载完成之后重启Sublime Text 3。</p></li><li><p>如果在Perferences-&gt;中看到Package Control这一项，则安装成功。<br><img src="/images/Sublime-Text3%E8%BD%AF%E4%BB%B6%E5%8F%8A%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85/3.jpg" alt></p></li><li><p>按下Ctrl+Shift+P调出命令面板 ，输入install 调出 Install Package 选项并回车，然后在列表中选中要安装的插件。</p></li><li><p>安装插件完成后，在Perferences-&gt;package Settings这一项中会出现相应的插件名字</p></li></ol><h3 id="常用插件"><a href="#常用插件" class="headerlink" title="常用插件"></a><p style="color:rgb(255,187,103)">常用插件</p></h3><p><font color="red">注意：安装插件时保持网络畅通，避免插件由于网络原因奔溃</font></p><ol><li><p><font color="#459BD9">Emmet</font></p><blockquote><p>功能：编码快捷键，前端必备<br>简介：Emmet作为zen coding的升级版，对于前端来说，可是必备插件，如果你对它还不太熟悉，可以在其官网(<a href="http://docs.emmet.io" target="_blank" rel="noopener">http://docs.emmet.io</a>) 上看具体的演示视频。<br>使用：教程——<a href="http://docs.emmet.io/cheat-sheet/" target="_blank" rel="noopener">http://docs.emmet.io/cheat-sheet/</a><br><img src="/images/Sublime-Text3%E8%BD%AF%E4%BB%B6%E5%8F%8A%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85/emmet.gif" alt></p></blockquote></li><li><p><font color="#459BD9">JSFormat</font></p><blockquote><p>功能：Javascript的代码格式化插件<br>简介：很多网站的JS代码都进行了压缩，一行式的甚至混淆压缩，这让我们看起来很吃力。而这个插件能帮我们把原始代码进行格式的整理，包括换行和缩进等等，是代码一目了然，更快读懂~<br>使用：在已压缩的JS文件中，右键选择jsFormat或者使用默认快捷键（Ctrl+Alt+F）<br><img src="/images/Sublime-Text3%E8%BD%AF%E4%BB%B6%E5%8F%8A%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85/jsFormat.gif" alt></p></blockquote></li><li><p><font color="#459BD9">Alignment</font></p><blockquote><p>功能：”=”号对齐<br>简介：变量定义太多，长短不一，可一键对齐<br>使用：默认快捷键Ctrl+Alt+A和QQ截屏冲突，可设置其他快捷键如：Ctrl+Shift+Alt+A；先选择要对齐的文本<br><img src="/images/Sublime-Text3%E8%BD%AF%E4%BB%B6%E5%8F%8A%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85/align.gif" alt></p></blockquote></li><li><p><font color="#459BD9">Sublime-Autoprefixer</font></p><blockquote><p>功能：CSS添加私有前缀<br>简介：CSS还未标准化，所以要给各大浏览器一个前缀以解决兼容问题<br>使用：Ctrl+Shift+P，选择autoprefixer即可。需要安装node.js。<br>其他设置如快捷键请参考：<a href="https://sublime.wbond.net/packages/Autoprefixer" target="_blank" rel="noopener">https://sublime.wbond.net/packages/Autoprefixer</a><br><img src="/images/Sublime-Text3%E8%BD%AF%E4%BB%B6%E5%8F%8A%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85/autoprefixer.gif" alt></p></blockquote></li><li><p><font color="#459BD9">Bracket Highlighter</font></p><blockquote><p>功能：代码匹配<br>简介：可匹配[], (), {}, “”, ”, &lt;tag&gt;，高亮标记，便于查看起始和结束标记<br>使用：点击对应代码即可<br><img src="/images/Sublime-Text3%E8%BD%AF%E4%BB%B6%E5%8F%8A%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85/highlight.gif" alt></p></blockquote></li><li><p><font color="#459BD9">Git</font></p><blockquote><p>功能：git管理<br>简介：插件基本上实现了git的所有功能<br>使用：<a href="https://github.com/kemayo/sublime-text-git/wiki" target="_blank" rel="noopener">https://github.com/kemayo/sublime-text-git/wiki</a><br><img src="/images/Sublime-Text3%E8%BD%AF%E4%BB%B6%E5%8F%8A%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85/git.png" alt></p></blockquote></li><li><p><font color="#459BD9">jQuery</font></p><blockquote><p>功能：jQ函数提示<br>简介：快捷输入jQ函数，是偷懒的好方法<br><img src="/images/Sublime-Text3%E8%BD%AF%E4%BB%B6%E5%8F%8A%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85/jquery.gif" alt></p></blockquote></li><li><p><font color="#459BD9">DocBlockr</font></p><blockquote><p>功能：生成优美注释<br>简介：标准的注释，包括函数名、参数、返回值等，并以多行显示，手动写比较麻烦<br>使用：输入/、/*然后回车<br><img src="/images/Sublime-Text3%E8%BD%AF%E4%BB%B6%E5%8F%8A%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85/basic.gif" alt> <img src="/images/Sublime-Text3%E8%BD%AF%E4%BB%B6%E5%8F%8A%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85/function-template.gif" alt></p></blockquote><!-- ，还有很多用法，请参照https://sublime.wbond.net/packages/DocBlockr --></li><li><p><font color="#459BD9">Color Picker</font></p><blockquote><p>功能：调色板<br>简介：需要输入颜色时，可直接选取颜色<br>使用：快捷键Windows: ctrl+shift+c<br><img src="/images/Sublime-Text3%E8%BD%AF%E4%BB%B6%E5%8F%8A%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85/ColorPicker1.png" alt> <img src="/images/Sublime-Text3%E8%BD%AF%E4%BB%B6%E5%8F%8A%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85/ColorPicker2.png" alt></p></blockquote></li><li><p><font color="#459BD9">AutoFileName</font></p><blockquote><p>功能：快捷输入文件名<br>简介：自动完成文件名的输入，如图片选取<br>使用：输入”/”即可看到相对于本项目文件夹的其他文件<br><img src="/images/Sublime-Text3%E8%BD%AF%E4%BB%B6%E5%8F%8A%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85/autofilename.gif" alt></p></blockquote></li><li><p><font color="#459BD9">LiveReload</font></p><blockquote><p>功能：实时自动刷新浏览器页面<br>简介：Sublime text3中代码的任何变化，Ctrl+S后，立即在Chrome中看到相应变化<br>使用：下载安装使用插件详细见<br><a href="https://meteorkun.github.io/2019/09/07/Sublime-Text3%E6%90%AD%E9%85%8DLiveReload%E5%AE%9E%E7%8E%B0%E5%89%8D%E7%AB%AF%E5%AE%9E%E6%97%B6%E5%88%B7%E6%96%B0%E9%A1%B5%E9%9D%A2/" target="_self" style="text-decoration: none;">Sublime-Text3搭配LiveReload实现前端实时刷新页面文章</a></p></blockquote></li></ol><p>未完待续。。。</p>]]></content>
      
      
      <categories>
          
          <category> 大前端 </category>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客上传本地图片</title>
      <link href="/2019/09/04/Hexo%E5%8D%9A%E5%AE%A2%E4%B8%8A%E4%BC%A0%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87/"/>
      <url>/2019/09/04/Hexo%E5%8D%9A%E5%AE%A2%E4%B8%8A%E4%BC%A0%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87/</url>
      
        <content type="html"><![CDATA[<ul><li>刚开始利用hexo和Github搭建好博客后，在写文章的时候想插入本地图片时遇到了点问题，写出来避免以后踩坑，大神看到后勿喷，无奈小白，也在网上查了方法</li></ul><p><strong>第一种方法</strong>（网上查找的，自己尝试失败，采用的是第二种方法）</p><ol><li><p>图片可以放在文章自己的目录中。文章的目录可以通过配置_config.yml来生成。<br>_config.yml 文件内<br>将<strong>_config.yml</strong>文件中的配置项<strong>post_asset_folder</strong>设为true<br><code>post_asset_folder: true</code></p></li><li><p>执行命令$ hexo new post_name，在source/_posts中会生成文章测试.md和同名文件夹测试。将图片资源放在测试文件夹中，文章就可以使用相对路径引用图片资源了。<br><img src="/images/Hexo%E5%8D%9A%E5%AE%A2%E4%B8%8A%E4%BC%A0%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87/1.jpg" alt></p></li><li><p><strong>hexo g</strong> 后生成的图片路径也是很奇怪<br><img src="/images/Hexo%E5%8D%9A%E5%AE%A2%E4%B8%8A%E4%BC%A0%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87/2.jpg" alt><br><img src="/images/Hexo%E5%8D%9A%E5%AE%A2%E4%B8%8A%E4%BC%A0%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87/3.jpg" alt><br><img src="/images/Hexo%E5%8D%9A%E5%AE%A2%E4%B8%8A%E4%BC%A0%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87/4.jpg" alt></p></li></ol><p><strong>第二种方法</strong></p><ol><li>可以在source文件夹下新建一个images文件夹，将图片统一放在source/images文件夹中，通过markdown语法访问它们。<br><code>![Alt text](/images/测试/1.jpg)</code><br><img src="/images/Hexo%E5%8D%9A%E5%AE%A2%E4%B8%8A%E4%BC%A0%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87/5.jpg" alt><br><img src="/images/Hexo%E5%8D%9A%E5%AE%A2%E4%B8%8A%E4%BC%A0%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87/6.jpg" alt></li><li>执行<strong>hexo clean</strong>， <strong>hexo g</strong>，<strong>hexo s</strong>，图片可以正常显示<br><img src="/images/Hexo%E5%8D%9A%E5%AE%A2%E4%B8%8A%E4%BC%A0%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87/7.jpg" alt></li></ol>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>谷歌插件整理</title>
      <link href="/2019/08/19/%E8%B0%B7%E6%AD%8C%E6%8F%92%E4%BB%B6%E6%95%B4%E7%90%86/"/>
      <url>/2019/08/19/%E8%B0%B7%E6%AD%8C%E6%8F%92%E4%BB%B6%E6%95%B4%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p>写在前面：</p><ul><li>插件下载链接打不开，有可能因为谷歌浏览器未安装谷歌访问助手插件</li><li>如若已翻墙，即可直接<strong>使用chrome 网上应用店搜索谷歌访问助手</strong>或<strong>点击下方插件相应链接</strong>进行下载；</li><li>如若没翻墙，可点击<a href="https://pan.baidu.com/s/1Myw_Gah-Y7Tp1RJiw_g6zA" target="_blank" rel="noopener">百度云链接</a> 下载谷歌访问助手插件  提取码：k5ej </li></ul><ol><li><p>使用谷歌访问助手插件方法：用谷歌浏览器进入扩展程序页面 chrome://extensions/<br>打开<img src="/images/%E8%B0%B7%E6%AD%8C%E6%8F%92%E4%BB%B6%E6%95%B4%E7%90%86/5.jpg" alt></p></li><li><p>将百度云中的<strong>谷歌访问助手.crx</strong>文件下载后拖入浏览器进行安装，安装成功后工具栏上方出现谷歌访问助手图标<br><img src="/images/%E8%B0%B7%E6%AD%8C%E6%8F%92%E4%BB%B6%E6%95%B4%E7%90%86/4.jpg" alt></p></li><li><p>点击<strong>Chrome商店</strong>进入chrome 网上应用店<br><img src="/images/%E8%B0%B7%E6%AD%8C%E6%8F%92%E4%BB%B6%E6%95%B4%E7%90%86/6.jpg" alt></p></li></ol><h4 id="1-谷歌访问助手"><a href="#1-谷歌访问助手" class="headerlink" title="1.谷歌访问助手"></a>1.谷歌访问助手</h4><p>安装方法如上:</p><h4 id="2-Tampermonkey-油猴-Tampermonkey是最受欢迎的用户脚本管理器"><a href="#2-Tampermonkey-油猴-Tampermonkey是最受欢迎的用户脚本管理器" class="headerlink" title="2.Tampermonkey (油猴:Tampermonkey是最受欢迎的用户脚本管理器)"></a>2.Tampermonkey (油猴:Tampermonkey是最受欢迎的用户脚本管理器)</h4><p><a href="https://chrome.google.com/webstore/search/tampermonkey?hl=zh-CN" target="_blank" rel="noopener">油猴下载链接</a><br><img src="/images/%E8%B0%B7%E6%AD%8C%E6%8F%92%E4%BB%B6%E6%95%B4%E7%90%86/7.jpg" alt><br>安装完成后点击右上角图标</p><ol><li>获取新脚本</li><li>点击GreasyFork</li><li>搜索大人的GreasyFork(用户脚本管理器)</li><li>安装大人的GreasyFork成功之后，以后就可以在上面方便的搜索脚本供自己享用<br><img src="/images/%E8%B0%B7%E6%AD%8C%E6%8F%92%E4%BB%B6%E6%95%B4%E7%90%86/8.jpg" alt><br><img src="/images/%E8%B0%B7%E6%AD%8C%E6%8F%92%E4%BB%B6%E6%95%B4%E7%90%86/9.jpg" alt><br><img src="/images/%E8%B0%B7%E6%AD%8C%E6%8F%92%E4%BB%B6%E6%95%B4%E7%90%86/10.jpg" alt><br><img src="/images/%E8%B0%B7%E6%AD%8C%E6%8F%92%E4%BB%B6%E6%95%B4%E7%90%86/11.jpg" alt></li></ol><blockquote><p>接下来这一款，不得不提到，真是下载资源的好神器，下面只是谷歌浏览器的插件。要想真正实现强大的功能，还需搭配软件来食用，在后续会提到，先放出插件下载地址</p></blockquote><h4 id="3-IDM-Integration-Module-强大的下载器"><a href="#3-IDM-Integration-Module-强大的下载器" class="headerlink" title="3.IDM Integration Module - 强大的下载器"></a>3.IDM Integration Module - 强大的下载器</h4><p><a href="https://chrome.google.com/webstore/detail/idm-integration-module/ngpampappnmepgilojfohadhhmbhlaek/related" target="_blank" rel="noopener">IDM Integration Module下载链接</a><br><img src="/images/%E8%B0%B7%E6%AD%8C%E6%8F%92%E4%BB%B6%E6%95%B4%E7%90%86/1.png" alt><br>安装成功后搭配本地的IDM下载器，完成飞一般的下载<br><img src="/images/%E8%B0%B7%E6%AD%8C%E6%8F%92%E4%BB%B6%E6%95%B4%E7%90%86/20.jpg" alt></p><h4 id="4-Adblock-Plus-免费的广告拦截器"><a href="#4-Adblock-Plus-免费的广告拦截器" class="headerlink" title="4.Adblock Plus - 免费的广告拦截器"></a>4.Adblock Plus - 免费的广告拦截器</h4><p><a href="https://chrome.google.com/webstore/search/Adblock%20Plus?hl=zh-CN" target="_blank" rel="noopener">Adblock Plus下载链接</a><br><img src="/images/%E8%B0%B7%E6%AD%8C%E6%8F%92%E4%BB%B6%E6%95%B4%E7%90%86/1.jpg" alt><img src="/images/%E8%B0%B7%E6%AD%8C%E6%8F%92%E4%BB%B6%E6%95%B4%E7%90%86/2.jpg" alt><br>安装成功后插件自动帮你拦截网页上的广告<br><img src="/images/%E8%B0%B7%E6%AD%8C%E6%8F%92%E4%BB%B6%E6%95%B4%E7%90%86/3.jpg" alt></p><h4 id="5-Infinity新标签页"><a href="#5-Infinity新标签页" class="headerlink" title="5.Infinity新标签页"></a>5.Infinity新标签页</h4><p><a href="https://chrome.google.com/webstore/search/Infinity%E6%96%B0%E6%A0%87%E7%AD%BE%E9%A1%B5?hl=zh-CN" target="_blank" rel="noopener">Infinity新标签页下载链接</a><br><img src="/images/%E8%B0%B7%E6%AD%8C%E6%8F%92%E4%BB%B6%E6%95%B4%E7%90%86/12.jpg" alt></p><ol><li>安装完成后点击右上角加号可进行添加自定义标签<br><img src="/images/%E8%B0%B7%E6%AD%8C%E6%8F%92%E4%BB%B6%E6%95%B4%E7%90%86/13.jpg" alt><br><img src="/images/%E8%B0%B7%E6%AD%8C%E6%8F%92%E4%BB%B6%E6%95%B4%E7%90%86/14.jpg" alt></li></ol><h4 id="6-Search-to-Play-the-Song（听音乐）"><a href="#6-Search-to-Play-the-Song（听音乐）" class="headerlink" title="6.Search to Play the Song（听音乐）"></a>6.Search to Play the Song（听音乐）</h4><p><a href="https://chrome.google.com/webstore/search/Search%20to%20Play%20the%20Song?hl=zh-CN" target="_blank" rel="noopener">Search to Play the Song下载链接</a><br><img src="/images/%E8%B0%B7%E6%AD%8C%E6%8F%92%E4%BB%B6%E6%95%B4%E7%90%86/15.jpg" alt></p><ol><li>安装完成后可在网易，QQ，咪咕，油管上搜索音乐，浏览器在线播放</li><li>附插件常用快捷键：<br>暂停快捷键：Shift + Alt + Z<br>列表播放后，切换下一首快捷键：Shift + Alt + X<br>歌曲Web页：Shift + Alt + W<br><img src="/images/%E8%B0%B7%E6%AD%8C%E6%8F%92%E4%BB%B6%E6%95%B4%E7%90%86/16.jpg" alt></li></ol><h4 id="7-Vue-js-devtools（在浏览器控制台中对数据结构进行解析和调试）"><a href="#7-Vue-js-devtools（在浏览器控制台中对数据结构进行解析和调试）" class="headerlink" title="7.Vue.js devtools（在浏览器控制台中对数据结构进行解析和调试）"></a>7.Vue.js devtools（在浏览器控制台中对数据结构进行解析和调试）</h4><p><a href="https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd" target="_blank" rel="noopener">Vue.js devtools下载链接</a><br><img src="/images/%E8%B0%B7%E6%AD%8C%E6%8F%92%E4%BB%B6%E6%95%B4%E7%90%86/19.jpg" alt></p><h4 id="8-沙拉查词-聚合词典划词翻译（选中需要翻译的单词就能翻译，支持谷歌，百度，有道三大翻译和朗读引擎）"><a href="#8-沙拉查词-聚合词典划词翻译（选中需要翻译的单词就能翻译，支持谷歌，百度，有道三大翻译和朗读引擎）" class="headerlink" title="8.沙拉查词-聚合词典划词翻译（选中需要翻译的单词就能翻译，支持谷歌，百度，有道三大翻译和朗读引擎）"></a>8.沙拉查词-聚合词典划词翻译（选中需要翻译的单词就能翻译，支持谷歌，百度，有道三大翻译和朗读引擎）</h4><p><a href="https://chrome.google.com/webstore/detail/%E6%B2%99%E6%8B%89%E6%9F%A5%E8%AF%8D-%E8%81%9A%E5%90%88%E8%AF%8D%E5%85%B8%E5%88%92%E8%AF%8D%E7%BF%BB%E8%AF%91/cdonnmffkdaoajfknoeeecmchibpmkmg" target="_blank" rel="noopener">沙拉查词下载链接</a><br><img src="/images/%E8%B0%B7%E6%AD%8C%E6%8F%92%E4%BB%B6%E6%95%B4%E7%90%86/17.jpg" alt></p><ol><li>安装完成后鼠标右键即可选择单词进行翻译<br><img src="/images/%E8%B0%B7%E6%AD%8C%E6%8F%92%E4%BB%B6%E6%95%B4%E7%90%86/18.jpg" alt></li></ol><h4 id="9-LiveReload（实时自动刷新浏览器页面）"><a href="#9-LiveReload（实时自动刷新浏览器页面）" class="headerlink" title="9.LiveReload（实时自动刷新浏览器页面）"></a>9.LiveReload（实时自动刷新浏览器页面）</h4><p><a href="https://chrome.google.com/webstore/search/livereload" target="_blank" rel="noopener">LiveReload下载链接</a><br><img src="/images/Sublime-Text3%E6%90%AD%E9%85%8DLiveReload%E5%AE%9E%E7%8E%B0%E5%89%8D%E7%AB%AF%E5%AE%9E%E6%97%B6%E5%88%B7%E6%96%B0%E9%A1%B5%E9%9D%A2/2.jpg" alt></p><p>使用:下载安装使用插件详细见<br><a href="https://meteorkun.github.io/2019/09/07/Sublime-Text3%E6%90%AD%E9%85%8DLiveReload%E5%AE%9E%E7%8E%B0%E5%89%8D%E7%AB%AF%E5%AE%9E%E6%97%B6%E5%88%B7%E6%96%B0%E9%A1%B5%E9%9D%A2/" target="_self" style="text-decoration: none;">Sublime-Text3搭配LiveReload实现前端实时刷新页面文章</a></p><hr><h4 id="10-其他插件"><a href="#10-其他插件" class="headerlink" title="10.其他插件"></a>10.其他插件</h4><p><strong>以下为从B站各个up主中整理的chrome插件（还没安装过，具体功能可见官方下载链接中介绍)</strong></p><ol><li><p>Postman Interceptor</p><blockquote><p>介绍：API/接口测试工具<br>功能：查看响应<br>使用：<a href="https://chrome.google.com/webstore/detail/postman-interceptor/aicmkgpgakddgnaphhhpliifpcfhicfo" target="_blank" rel="noopener">Postman Interceptor下载链接</a></p></blockquote></li><li><p>EditThisCookie</p><blockquote><p>介绍：cookie管理器<br>功能：可以添加，删除，编辑，搜索，锁定和屏蔽各种cookie<br>使用：<a href="https://chrome.google.com/webstore/detail/editthiscookie/fngmhnnpilhplaeedifhccceomclgfbg" target="_blank" rel="noopener">EditThisCookie下载链接</a></p></blockquote></li><li><p>Office Online</p><blockquote><p>介绍：网页上查看和编辑Microsoft Word、Excel和PowerPoint文件<br>功能：无需在你的计算机上安装Office程序<br>使用：<a href="https://chrome.google.com/webstore/detail/office-online/ndjpnladcallmjemlbaebfadecfhkepb" target="_blank" rel="noopener">Office Online下载链接</a></p></blockquote></li><li><p>Octotree</p><blockquote><p>介绍：在Github上直接浏览代码的需求）<br>使用：<a href="https://chrome.google.com/webstore/detail/octotree/bkhaagjahfmjljalopjnoealnfndnagc" target="_blank" rel="noopener">Octotree下载链接</a></p></blockquote></li><li><p>WEB前端助手(FeHelper)</p><blockquote><p>功能：Awesome ALL In One的一个工具，包含多个独立小应用，比如：Json工具，代码美化工具，代码压缩，二维码工具，markdown工具，网页油猴工具，便签笔记工具，信息加密与解密，随机密码生成，Crontab等等<br>使用：<a href="https://chrome.google.com/webstore/detail/web%E5%89%8D%E7%AB%AF%E5%8A%A9%E6%89%8Bfehelper/pkgccpejnmalmdinmhkkfafefagiiiad" target="_blank" rel="noopener">WEB前端助手(FeHelper)下载链接</a></p></blockquote></li><li><p>Imagus</p><blockquote><p>功能：鼠标指针悬停在链接或缩略图上时直接在当前页面的弹出视图上显示这些图片、HTML5 视频/音频和内容专辑<br>使用：<a href="https://chrome.google.com/webstore/detail/imagus/immpkjjlgappgfkkfieppnmlhakdmaab" target="_blank" rel="noopener">Imagus下载链接</a></p></blockquote></li><li><p>掘金</p><blockquote><p>功能：为程序员、设计师、产品经理每日发现优质内容<br><font color="red"><strong>不过这款插件下载后，主页默认打开是掘金页面</strong></font><br>使用：<a href="https://chrome.google.com/webstore/detail/%E6%8E%98%E9%87%91/lecdifefmmfjnjjinhaennhdlmcaeeeb" target="_blank" rel="noopener">掘金下载链接</a></p></blockquote></li></ol>]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 谷歌 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
